常用技巧
===============

windows 常用技巧

链接 mklink
------------------------

Windows 链接共有三种方式, 包括软链接与硬链接. 文件与文件夹分别两种. 使用 ``mklink`` 命令创建::

  D:\>mklink
  创建符号链接。

  MKLINK [[/D] | [/H] | [/J]] Link Target

          /D      创建目录符号链接。默认为文件
                  符号链接。
          /H      创建硬链接而非符号链接。
          /J      创建目录联接。
          Link    指定新的符号链接名称。
          Target  指定新链接引用的路径
                  (相对或绝对)。

硬链接
'''''''''''''''''''''''''

从Windows  NT4开始，NTFS文件系统引入了HardLink这个概念，它让一个文件可以拥有多个访问路径。

硬链接是 Windows 上最早的链接方式, 它类似于 Linux 的硬链接, 将多个位置链接到一个文件, 没有源文件之分.

**硬链接只能用于文件.**

.. hint:: 若想删除一个有多个硬链接的文件, 需要将所有链接到文件的硬链接删除.

命令::

  mklink /D 链接位置 链接目标

硬链接的优点:

- 兼容性好
- 盘符被更改也不会受影响
- *无需管理员的权限

硬链接的缺点:

- 必须在同一个分区
- 仅支持本地驱动器
- *不支持为文件夹创建硬链接

Junction联结
'''''''''''''''''''''''''

到了Windows2000，引入了Junction 链接方式，又叫初级的软链接，它属于**软链接**类型。可实现为一个**文件夹**创建多个链接。

联结类似于快捷方式, 当访问联结文件夹时, 系统会重定向到源文件夹.

**联结只能对文件夹使用.**

命令::

  mklink /J 链接位置 链接目标 

Junction 链接的优点:

- 兼容性还好
- 支持文件夹操作
- 支持跨分区
- 无需管理员权限

Junction 链接的缺点:

- 不支持相对路径
- 盘符被更改会受影响
- *不可指向文件/远程SMB网络路径

符号链接
'''''''''''''''''''''''''

Symbolic Link 又被叫做符号链接和 Soft Link（软链接）。是在Vista之后才有的，可以说是Junction链接的增强版.

**符号联结支持文件与文件夹.**

对于文件::

  mklink 链接位置 链接目标

对于文件夹::

  mklink /D 链接位置 链接目标 

符号链接的优点:

- 支持任何路径, 包括文件和不存在的路径
- 支持相对路径
- 支持跨文件系统

符号链接的缺点:

- 兼容性较差

Python2 Python3 共存
------------------------

1. 首先将 Python2 与 Python3 安装到不同目录.
2. 将Python2 与 Python3 的安装目录都添加到 ``PATH``, 包括安装目录与脚本目录.

例如::

  C:\Program Files\Python27\;
  C:\Program Files\Python27\Scripts;

3. 修改其中一个版本的名字.

例如将 Python2 的 ``python.exe`` 修改为 ``python2.exe``. 然后将 ``Scripts`` 文件夹的 ``pip.exe`` 删除.

.. attention:: 
  
  安装两个版本时, Python2 的根目录可能会没有 ``Scripts`` 文件夹, 导致无法使用 ``pip``.
  这时候只要运行::

    python2 -m ensurepip
